// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @unique @default(uuid())
  email    String    @unique
  password String
  post     Post[] @relation("userPostRelation")
  comment  Comment[] @relation("userCommentRelation")
  photo    Image[] @relation("userPhotoRelation")
  reactionForPost  ReactionForPost[] @relation("userReactionForPostRelation")
  reactionForComment  ReactionForComment[] @relation("userReactionForCommentRelation")
  
}

model Post {
  id          String    @id @unique @default(uuid())
  title       String
  content     String
  published   Boolean   @default(false)
  author      User      @relation("userPostRelation",fields: [authorId], references: [id])
  authorId    String
  photo       Image[] @relation("postImageRelation")
  comments    Comment[] @relation("postCommentRelation")
  publishedAt DateTime  @default(now())
  reaction  ReactionForPost[]  @relation("postReactionRelation")
}

model Comment {
  id          String   @id @unique @default(uuid())
  title       String
  content     String
  published   Boolean  @default(false)
  author      User     @relation("userCommentRelation",fields: [authorId], references: [id])
  authorId    String
  postId      String
  post        Post     @relation("postCommentRelation",fields: [postId], references: [id])
  photo       Image[]   @relation("commentImageRelation")
  publishedAt DateTime @default(now())
  reaction  ReactionForComment[]  @relation("commentReactionRelation")
}

model Image {
  id          String   @id @unique @default(uuid())
  url         String
  commentId   String?
  comment     Comment? @relation("commentImageRelation",fields: [commentId], references: [id])
  postId      String?
  post        Post?    @relation("postImageRelation",fields: [postId], references: [id])
  userId      String?
  user        User?    @relation("userPhotoRelation",fields: [userId], references: [id])
  publishedAt DateTime @default(now())
}

model ReactionForPost {
  id String @id @unique @default(uuid())
  reactionName ReactionPostStateEnum
  userId     String
  user User @relation("userReactionForPostRelation",fields: [userId], references: [id])
  postId   String
  post Post @relation("postReactionRelation",fields: [postId], references: [id])
  createdAt DateTime @default(now())
}

model ReactionForComment {
  id String @id @unique @default(uuid())
  reactionName ReactionCommentStateEnum
  userId     String
  user User @relation("userReactionForCommentRelation",fields: [userId], references: [id])
  commentId String
  comment Comment @relation("commentReactionRelation",fields: [commentId], references: [id])
  createdAt DateTime @default(now())
}

enum ReactionPostStateEnum {
  LIKE
  HEART
  LAUGH
  SMILE
  DISLIKE
}

enum ReactionCommentStateEnum {
  LIKE
  HEART
  LAUGH
  SMILE
  DISLIKE
}
